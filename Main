P0=0.4;
while(1)
delx=0.5;
dely=0.5;
pa=0.101;
g=9.8;
fpa=0.101^2;
h=16;
d=0.4;
Cd=0.8;
A0=(1/4)*pi*d^2;
k=1.4;
fa=sqrt(k*(2/(k+1))^((k+1)/(k-1)));
Ps=0.5;
R=29.27;
T0=288;
u=1.833*10^(-5);
Length=80;
Wide=60;
de=1.226;
E=(2/delx^2)+(2/dely^2);
%AX=B,先构造矩阵A
A=zeros(4661,4661);
A(1,1)=1;A(1,2)=-1/(E*dely^2);A(1,1+59)=-1/(E*delx^2);
for i=2:58
    A(i,i-1)=-1/(E*dely^2);
    A(i,i)=1;
    A(i,i+1)=-1/(E*dely^2);
    A(i,i+59)=-1/(E*delx^2); 
end
A(59,59)=1-1/(E*dely^2);A(59,59-1)=-1/(E*dely^2);A(59,59+59)=-1/(E*delx^2);
for  i=60:4602
     A(i,i-59)=-1/(E*delx^2);
     A(i,i-1)=-1/(E*dely^2);
     A(i,i)=1;
     A(i,i+1)=-1/(E*dely^2);
     A(i,i+59)=-1/(E*delx^2);
     if  rem(i-1,59)==0
         A(i,i-1)=0;
     end
     if  rem(i-59,59)==0
         A(i,i+1)=0;
         A(i,i)=1-1/(E*dely^2);
     end
end
A(4603,4603)=1-1/(E*dely^2);A(4603,4603-59)=-1/(E*delx^2);A(4603,4603+1)=-1/(E*dely^2);
for i=4604:4660
    A(i,i-1)=-1/(E*dely^2);
    A(i,i)=1-1/(E*dely^2);
    A(i,i+1)=-1/(E*dely^2);
    A(i,i-59)=-1/(E*delx^2); 
end
A(4661,4661)=1-1/(E*dely^2)-1/(E*delx^2);A(4661,4661-1)=-1/(E*dely^2);A(4661,4661-59)=-1/(E*delx^2);
for  i=1:4661
       A(2331,i)=0;
end
A(2331,2331)=1;
%AX=B,先构造矩阵B
B=zeros(4661,1);
B(1,1)=(1/E)*((fpa/delx^2)+(fpa/dely^2));
for i=2:58
    B(i,1)=fpa/(E*delx^2);
end
B(59,1)=fpa/(E*delx^2);
for i=60:4602
    if  rem(i-1,59)==0
        B(i,1)=fpa/(E*dely^2);              
    end 
end
B(4603,1)=(1/E)*((fpa/dely^2));
for i=4604:4660
    B(i,1)=0;
end
B(4661,1)=0;
B(2331,1)=P0^2;
X1=A\B;
X1=sqrt(X1);
% % %AX=B,分解矩阵A=D+L+H,其中D为A的对角,L为D的下三角,H为A的上三角
% L=tril(A);
% L=L-diag(diag(L));
% H=triu(A);
% H=H-diag(diag(H));
% V=diag(A);
% D=diag(V,0);
% %产生迭代格式
% X0=zeros(4661,1);
% n=0;
% w=1.15;
% q=norm(-inv(D)*(L+H),2);
% for i=1:100
%      X1=inv(D+w*L)*[(1-w)*D-w*H]*X0+inv(D+w*L)*w*B;
%      e1=(q/(1-q))*norm(X1-X0,2)
%      n=n+1;
%      X0=X1;
%      fprintf('第%f次迭代',n)
%      if   e1<10^(-2)
%           break; 
%      end
% end 
pre=zeros(79,59);
n=1;
for  i=1:79
     for  j=1:59
            pre(i,j)=X1(n,1);
            n=n+1;
     end  
end
%拼接矩阵
pre1=zeros(79,1);
pred=zeros(79,59);
for  i=1:79
       for  j=1:59
              pred(i,60-j)=pre(i,j);
       end
end

for  j=1:79
       pre1(j,1)=pre(j,59);
end
prez=cat(2,pre,pre1);
preb=cat(2,prez,pred);
pre2=zeros(1,119);
for j=1:119
      pre2(1,j)=preb(79,j);
end
prec=cat(1,preb,pre2);
pref=zeros(79,119);
for  i=1:119
       for  j=1:79
              pref(j,i)=preb(80-j,i);
       end
end
pressure=cat(1,prec,pref);
z1=ones(159,1);
z1=z1*pa;
pressure=cat(2,z1,pressure);
pressure=cat(2,pressure,z1);
z2=ones(1,121);
z2=z2*pa;
pressure=cat(1,z2,pressure);
pressure=cat(1,pressure,z2);
a=size(pressure);
B=0:0.5:(a(1)-1)*0.5;
C=0:0.5:(a(2)-1)*0.5;
figure(1);
[bb,cc] = meshgrid(B,C);
surf(bb',cc',pressure);
xlabel('x/mm');
ylabel('y/mm');
title('压力分布');
%计算质量流率来修正p0
xj=0;
for  i=2:160
       xj=xj+(pressure(i,2)-pa)/dely;
end
yj=0;
for  i=2:120
    yj=yj+(pressure(2,i)-pa)/delx;
end
wout=2*(xj+yj)*(h^3)*10^(-15)/(12*u)*de;
win=Cd*A0*sqrt(Ps*de)*(P0/Ps)^(1/k)*sqrt((2*k/(k-1))*(1-P0/Ps)^((k-1)/k))*10^(-6);
e2=win-wout;
fprintf('win数值为:%e\nwout数值为:%e\n进出口流量差值:%e\n',win,wout,e2);
fprintf('测试数据:%.10f\nxj为:%e\nyj为%e\n',P0,xj,yj);
if abs(e2)<10^(-10)
     break;
end
P0=P0+0.0001;
end
%计算承载能力
W=(sum(pressure(:))-(161*2+119*2)*pa)*delx*dely/g;
fprintf('承载力为:%f公斤力\n',W);
